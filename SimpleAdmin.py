# SA Module, by Purpl3 (https://t.me/PLNT_YT)
from telebot import types, TeleBot

# import SimpleFramework
try: 
    from SimpleFramework import *
except ImportError:
    print('SimpleFramework not found, SimpleAdmin may not work.') # —É—Å—Ç–∞–Ω–æ–≤–∏ SimpleFramework –±–æ–∂–∂–∂

cmds = []

class ACommand: # –∫–ª–∞—Å—Å –¥–ª—è –∫–æ–º–∞–Ω–¥, –ø–æ —Ç–∏–ø—É ahelp, aban, –∏ —Ç.–¥
    def __init__(self, name: str, desc: str, params: list, access: str):
        self.name = name
        self.desc = desc
        self.params = params
        self.access = access

        cmds.append(self)

    def get(self):
        return self.__dict__

def setup(bot: TeleBot):
    print('SimpleAdmin initialized. Enjoy!') # –æ–º–∞–≥–∞–¥

    async def raiseError(message: types.Message, text: str):
        await bot.reply_to(message, 'üö´ ' + bold(text)) # –≤—ã–¥–∞–≤–∞—Ç—å –æ—à–∏–±–∫—É

    async def checkAdmin(message: types.Message):
        user = await bot.get_chat_member(message.chat.id, message.from_user.id)
        if user.status == 'administrator' or user.status == 'creator':
            return True # –±—Ä–æ —Ä–µ–∞–ª—å–Ω–æ –∫—É–ø–∏–ª –∞–¥–º–∏–Ω–∫—É –∑–∞ 100–≥—Ä–Ω
        
        else: False # —Ä–µ—Ç–∞—Ä–Ω–∞—Ç—å —Ñ–∞–ª—Å –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–¥–º–∏–Ω

    ACommand('ahelp', '–ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ SimpleAdmin', ['command'], 'user')
    @bot.message_handler(commands=['ahelp'])
    async def ahelp(message: types.Message):
        if not checkArgs(message, 0):
            text = f'''{bold('üõ† –ö–æ–º–∞–Ω–¥—ã SimpleAdmin:')}'''

            for cmd in cmds:
                text += bold(f'''\n/{cmd.get()['name']} - {cmd.get()['desc']}''') # /ahelp - –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ SimpleAdmin

            await bot.reply_to(message, text)
        else:
            # —É—Ñ—Ñ, —á—Ç–æ –∑–∞ –≥–æ–≤–Ω–æ–∫–æ–¥ —Ç–∞–∫–æ–π.. –±–∞—Ä—Ö–∞—Ç–Ω—ã–π..
            for cmd in cmds:
                if cmd.get()['name'] == getArgs(message)[0]:
                    cmdData = cmd.get()
                    text = bold(f'–ö–æ–º–∞–Ω–¥–∞: /' + cmdData['name'])

                    if len(cmdData['params']) != 0: 
                        text += bold('\n–ü–∞—Ä–∞–º–µ—Ç—Ä—ã: ' + ' '.join(['(' + arg + ')' for arg in cmd.get()['params']]))

                    text += bold('\n–û–ø–∏—Å–∞–Ω–∏–µ: ' + cmdData['desc'])
                    
                    if cmdData['access'] == 'admin' and await checkAdmin(message) == True: # –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –∞–¥–º–∏–Ω—Å–∫–∞—è –∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –∞–¥–º–∏–Ω–∫–∞
                        text += bold('\nüîê –£ –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ')
                    
                    elif cmdData['access'] == 'admin' and not await checkAdmin(message) == False: # –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç—É –∞–¥–º–∏–Ω–∫–∏
                        text += bold('\nüö´ –£ –≤–∞—Å –Ω–µ—Ç—É –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ')

                    try:
                        if getArgs(message)[1] == '-v': # –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω –¥–µ–±–∞–≥
                            text += f'\nü™≤ {bold("Debug info:")}\n{bold("Dict: ")}' + f'''{mono(str(cmd.__dict__).replace('<', '{').replace('>', '}'))}\n{bold('Raw: ')}{mono(str(cmd).replace('<', '{').replace('>', '}'))}'''
                    
                    except IndexError: pass # –ø–∞—Å—Å–∞—Ç—å –µ—Å–ª–∏ –Ω–µ –≤–∫–ª—é—á–µ–Ω –¥–µ–±–∞–≥

                    await bot.reply_to(message, text) # –æ—Ç—Å—ã–ª–∞–µ–º help —Ç–µ–∫—Å—Ç
                    
                    return # –≤–æ–∑—Ä–∞—â–∞–µ–º —á—Ç–æ–±—ã –∫–æ–¥ –¥–∞–ª—å—à–µ –Ω–µ —à—ë–ª
                
            await raiseError(message, '–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!') # –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ /ahelp –Ω–µ –Ω–∞—à–ª–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø—Ä–æ –∫–æ–º–∞–Ω–¥—É

    
    ACommand('aban', '–ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', ['user'], 'admin')
    @bot.message_handler(commands=['aban'])
    async def ban(message: types.Message):
        if not await checkAdmin(message): # –ª–æ—à–∞—Ä–∞, –ø—Ä–æ—Å–∏ –∞–¥–º–∏–Ω–∫—É —É –æ–≤–Ω–µ—Ä–∞
            await raiseError(message, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!')
            return
        
        args = getArgs(message)
        if not checkArgs(message, 0): # –ï—Å–ª–∏ –∞–¥–º–∏–Ω –Ω–µ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            await raiseError(message, '–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!')

        if args[0].isdigit():
            if int(args[0]) == message.from_user.id: # –±—Ä–æ, —è —Å–µ–±—è –∑–∞—Ö—É—è..
                await bot.send_photo(message.chat.id, 'https://i.imgur.com/DWScpZM.jpg', reply_to_message_id=message.id)
                return
                
            await bot.unban_chat_member(message.chat.id, args[0])
            await bot.reply_to(message, bold('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!'))
        else:
            await raiseError(message, '–£–∫–∞–∂–∏—Ç–µ –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!')
    
    ACommand('aunban', '–†–∞–∑–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', ['user'], 'admin')
    @bot.message_handler(commands=['aunban'])
    async def unban(message: types.Message):
        if not await checkAdmin(message): # –º—É—Ö–∞—Ö–∞—Ö–∞—Ö–∞, –ø—Ä–æ—Å–∏ –∞–¥–º–∏–Ω–∫—É –∑–∞ 100–≥—Ä–Ω
            await raiseError(message, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!')
            return
        
        args = getArgs(message)
        if not checkArgs(message, 0): # –ï—Å–ª–∏ –∞–¥–º–∏–Ω –Ω–µ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            await raiseError(message, '–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!')
        
        if args[0].isdigit():
            await bot.unban_chat_member(message.chat.id, args[0]) # —Ä–∞–∑–±–∞–Ω
            await bot.reply_to(message, bold('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!'))
        else:
            await raiseError(message, '–£–∫–∞–∂–∏—Ç–µ –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!')

    ACommand('ainfo', '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —á–∞—Ç–µ', [], 'user')
    @bot.message_handler(commands=['ainfo'])
    async def ainfo(message: types.Message):
        if message.chat.title != None: # —á–µ–∫–∞—Ç—å –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –≤ —á–∞—Ç–µ
            membersCount = await bot.get_chat_member_count(message.chat.id) # –ø–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

            await bot.reply_to(message, bold(f'‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —á–∞—Ç–µ: {message.chat.title}\n') + 
f'''{bold('‚ÑπÔ∏è –ê–π–¥–∏: ')} {mono(str(message.chat.id))}
{bold('üë• –£—á–∞—Å—Ç–Ω–∏–∫–∏: ' + str(membersCount))}''') # —ç—Ç–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ –∏–º–±–∞
        
        else: # –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –≤ —á–∞—Ç–µ
            await raiseError(message, '–í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —á–∞—Ç–µ!')