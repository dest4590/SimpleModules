# SA Module, by Purpl3 (https://t.me/PLNT_YT)
from telebot import types, TeleBot
from datetime import datetime
import requests
import os

# import SimpleFramework
try: 
    from SimpleFramework import *
except ImportError: # –±—Ä–æ, —É—Å—Ç–∞–Ω–æ–≤–∏ —Å–∏–º–ø–ª —Ñ—Ä–∞–µ–º–≤–æ—Ä–∫
    print('SimpleFramework not found, SimpleLoader may not work.')

# Import pytube, if not exist install it
try:
    import pytube 
except ImportError: # —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–π-—Ç—é–±–∏–∫–∞
    import pip
    pip.main(['install', 'pytube'])

def setup(bot: TeleBot):
    print('SimpleLoader initialized. Enjoy!') # –±–æ–≥–∞—Ç—ã–π —Ä–æ–±—É–∫—Å

    async def raiseError(message: types.Message, text: str):
        await bot.reply_to(message, 'üö´ ' + bold(text))

    @bot.message_handler(commands=['download'])
    async def download(message: types.Message): # —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ
        if not checkArgs(message, 0): # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —É–∫–∞–∑–∞–ª –≤–∏–¥–µ–æ
            await raiseError(message, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —é—Ç—É–± –≤–∏–¥–µ–æ')
            return
        
        args = getArgs(message) # –ø–æ–ª—É—á–∏—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã

        # –Ω–µ –±–µ–π—Ç–µ –∑–∞ `== True`, —è –¥–ª—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ ((
        if args[0].startswith('https://youtube.com/') == True or args[0].startswith('https://www.youtube.com/') == True or args[0].startswith('https://youtu.be/') == True:
            try: # –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ
                video = pytube.YouTube(args[0]) # –∏–Ω—Ñ–∞ –æ–± –≤–∏–¥–µ–æ

                resolution_keyboard = types.InlineKeyboardMarkup()

                quality_in_keyboard = [] # —Å–ø–∏—Å–æ–∫ —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º –∫–∞—á–µ—Å—Ç–≤–æ–º –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
                for stream in video.streams.filter(mime_type='video/mp4'):
                    if str(stream.resolution) in quality_in_keyboard:
                        pass

                    resolution_keyboard.add(types.InlineKeyboardButton('üìπ MP4 ' + str(stream.resolution) + ' ' + str(stream.fps) + 'fps', callback_data='mp4@'+args[0]+'@'+str(stream.resolution))) # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
                    quality_in_keyboard.append(str(stream.resolution)) # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ –≤ —Å–ø–∏—Å–æ–∫ (—á—Ç–æ–±—ã –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–ª–æ—Å—å)

                audio = video.streams.filter(only_audio=True, mime_type='audio/mp4').desc().first() # –±—Ä–∞—Ç—å –ª—É—á—à–∏–π –≤–∞—Ä–∏–∞–Ω—Ç —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∞—É–¥–∏–æ (—á—ë —è –≤—ã—Å—Ä–∞–ª)
                resolution_keyboard.add(types.InlineKeyboardButton('üéß Audio ' + str(audio.abr), callback_data='audio@'+args[0]+'@'+str(audio.abr))) # –¥–æ–±–∞–≤–∏—Ç—å –ª—É—á—à–µ–µ –∞—É–¥–∏–æ

                await bot.send_message(message.chat.id, bold(f'–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ: {str(video.title)}'), reply_markup=resolution_keyboard) # –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –≤—ã–±–æ—Ä–æ–º –∫–∞—á–µ—Å—Ç–≤–∞

            except Exception as e:
                print(f'Video download error: {e}')
                await raiseError(message, '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ') # –≤—ã–¥–∞–≤–∞—Ç—å –æ—à–∏–±–∫—É
        
        else:
            await raiseError(message, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —é—Ç—É–± –≤–∏–¥–µ–æ') # –Ω—É —Å–∫–∞–∑–∞–ª–∏ –∂–µ
            return

    @bot.callback_query_handler(func=lambda call: str(call.data).startswith('mp4') or str(call.data).startswith('audio')) # callback –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ –∫–∞—á–µ—Å—Ç–≤–∞
    async def work_download(query: types.CallbackQuery):
        await bot.answer_callback_query(query.id, '–°–∫–∞—á–∏–≤–∞—é...') # —Ç—è–∂–µ–ª–æ..
        # –∫–∞—á–∞–µ–º
        video = pytube.YouTube(query.data.split('@')[1]) # –∏–Ω—Ñ–æ –æ–± –≤–∏–¥–µ–æ

        if query.data.split('@')[0] == 'mp4': # –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ –≤–∏–¥–µ–æ
            filename = 'temp' + str(datetime.now()) +'.mp4'
            video.streams.filter(file_extension='mp4', res=query.data.split('@')[2]).first().download('./', filename)

        elif query.data.split('@')[0] == 'audio': # –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ –∞—É–¥–∏–æ
            filename = 'temp' + str(datetime.now()) +'.mp3'
            video.streams.filter(mime_type='audio/mp4', abr=query.data.split('@')[2], type='audio').first().download('./', filename)

        if query.data.split('@')[0] == 'mp4': # –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ –≤–∏–¥–µ–æ
            # –∏—Å–ø–æ–ª—å–∑—É–µ–º envs.sh, –ø–æ—Ç–æ–º—É-—á—Ç–æ –≥—É—Ñ–∏ –∞—Ö—Ö —Ç–µ–ª–µ–≥—Ä–∞–º–º –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ñ–∞–π–ª –Ω–µ –±–æ–ª—å—à–µ 20–º–±, –∞ –æ–Ω –∞–∂ —Ü–µ–ª—ã—Ö 512 –º–µ–≥–∞–±–∞–π—Ç!!!
            envs = requests.post('http://envs.sh', files={'file': open(filename, 'rb').read()}).content
            await bot.send_video(query.message.chat.id, envs.decode())
            
        elif query.data.split('@')[0] == 'audio': # –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ –∞—É–¥–∏–æ
            await bot.send_audio(query.message.chat.id, open(filename, 'rb').read()) # –Ω—É —Ç—É—Ç –ø—Ä–æ—Å—Ç–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –∞—É–¥–∏–æ, –±–µ–∑ envs.sh, –ø–æ—Ç–æ–º—É-—á—Ç–æ –∞—É–¥–∏–æ –º–∞–ª–æ –≤–µ—Å–∏—Ç
       
        # —É–¥–∞–ª—è–µ–º —Ñ–∞–π–ª —á—Ç–æ–±—ã –º–µ—Å—Ç–æ –Ω–µ –±–æ–º –±–æ–º
        os.remove(filename)